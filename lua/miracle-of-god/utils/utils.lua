local M = {}
local colors = require("miracle-of-god.utils.color").COLORS

local function HL(syntaxName, options)
	vim.api.nvim_set_hl(0, syntaxName, options)
end

function M.setHighLight()
	HL("Normal", { fg = colors.FG, bg = colors.BG })
	HL("Comment", { fg = colors.GRAY, italic = true })
	HL("CursorLine", { bg = "" })
	HL("CursorColumn", { bg = "" })
	HL("LineNr", { fg = colors.GRAY })
	HL("CursorLineNr", { fg = colors.RED })
	HL("String", { fg = colors.RED })
	HL("Number", { fg = colors.BROWN })
	HL("Boolean", { fg = colors.GREEN })
	HL("Function", { fg = colors.BLUE })
	HL("Keyword", { fg = colors.PINK })
	HL("Operator", { fg = colors.ORANGE })
	HL("Type", { fg = colors.GREEN })
	HL("Identifier", { fg = colors.PURPLE })
	HL("PreProc", { fg = colors.PINK })
	HL("Special", { fg = colors.ORANGE })
	HL("Underlined", { fg = colors.GREEN, underline = true })
	HL("Constant", { fg = colors.BLUE })
	HL("Label", { fg = colors.BLUE })
	HL("SpecialKey", { fg = colors.ORANGE })
	HL("Title", { fg = colors.BLUE })
	HL("@variable", { fg = colors.ORANGE })
	HL("Import", { fg = colors.ORANGE })
	HL("Export", { fg = colors.RED })
	HL("Module", { fg = colors.PURPLE })
	HL("Namespace", { fg = colors.RED })
	HL("Package", { fg = colors.PURPLE })
	HL("Use", { fg = colors.GREEN })
	HL("Include", { fg = colors.PURPLE })
	HL("Require", { fg = colors.ORANGE })
	HL("jsFunction", { fg = colors.PURPLE })
	HL("jsVariable", { fg = colors.RED })
	HL("jsThis", { fg = colors.GREEN })
	HL("jsClass", { fg = colors.ORANGE })
	HL("jsObjectLiteral", { fg = colors.PINK })
	HL("jsObjectKey", { fg = colors.PINK })
	HL("jsObjectValue", { fg = colors.PINK })
	HL("jsObjectProp", { fg = colors.PINK })
	HL("javaFunction", { fg = colors.PURPLE })
	HL("javaVariable", { fg = colors.RED })
	HL("javaThis", { fg = colors.GREEN })
	HL("javaClass", { fg = colors.ORANGE })
	HL("javaObjectLiteral", { fg = colors.BROWN })
	HL("javaObjectKey", { fg = colors.PINK })
	HL("javaObjectValue", { fg = colors.GREEN })
	HL("javaObjectProp", { fg = colors.BROWN })
	HL("dartFunction", { fg = colors.PURPLE })
	HL("dartVariable", { fg = colors.RED })
	HL("dartThis", { fg = colors.GREEN })
	HL("dartClass", { fg = colors.ORANGE })
	HL("dartObjectLiteral", { fg = colors.BROWN })
	HL("dartObjectKey", { fg = colors.PINK })
	HL("dartObjectValue", { fg = colors.GREEN })
	HL("dartObjectProp", { fg = colors.BROWN })
	HL("tsFunction", { fg = colors.PURPLE })
	HL("tsVariable", { fg = colors.RED })
	HL("tsThis", { fg = colors.GREEN })
	HL("tsClass", { fg = colors.ORANGE })
	HL("tsObjectLiteral", { fg = colors.BROWN })
	HL("tsObjectKey", { fg = colors.PINK })
	HL("tsObjectValue", { fg = colors.GREEN })
	HL("tsObjectProp", { fg = colors.BROWN })
	HL("cFunction", { fg = colors.PURPLE })
	HL("cVariable", { fg = colors.RED })
	HL("cThis", { fg = colors.GREEN })
	HL("cClass", { fg = colors.ORANGE })
	HL("cObjectLiteral", { fg = colors.BROWN })
	HL("cObjectKey", { fg = colors.PINK })
	HL("cObjectValue", { fg = colors.GREEN })
	HL("cObjectProp", { fg = colors.BROWN })
	HL("cppFunction", { fg = colors.PURPLE })
	HL("cppVariable", { fg = colors.RED })
	HL("cppThis", { fg = colors.GREEN })
	HL("cppClass", { fg = colors.ORANGE })
	HL("cppObjectLiteral", { fg = colors.BROWN })
	HL("cppObjectKey", { fg = colors.PINK })
	HL("cppObjectValue", { fg = colors.GREEN })
	HL("cppObjectProp", { fg = colors.BROWN })
	HL("csFunction", { fg = colors.PURPLE })
	HL("csVariable", { fg = colors.RED })
	HL("csThis", { fg = colors.GREEN })
	HL("csClass", { fg = colors.ORANGE })
	HL("csObjectLiteral", { fg = colors.BROWN })
	HL("csObjectKey", { fg = colors.PINK })
	HL("csObjectValue", { fg = colors.GREEN })
	HL("csObjectProp", { fg = colors.BROWN })
	HL("pythonFunction", { fg = colors.PURPLE })
	HL("pythonVariable", { fg = colors.RED })
	HL("pythonThis", { fg = colors.GREEN })
	HL("pythonClass", { fg = colors.ORANGE })
	HL("pythonObjectLiteral", { fg = colors.BROWN })
	HL("pythonObjectKey", { fg = colors.PINK })
	HL("pythonObjectValue", { fg = colors.GREEN })
	HL("pythonObjectProp", { fg = colors.BROWN })
	HL("vueFunction", { fg = colors.PURPLE })
	HL("vueVariable", { fg = colors.RED })
	HL("vueThis", { fg = colors.GREEN })
	HL("vueClass", { fg = colors.ORANGE })
	HL("vueObjectLiteral", { fg = colors.BROWN })
	HL("vueObjectKey", { fg = colors.PINK })
	HL("vueObjectValue", { fg = colors.GREEN })
	HL("vueObjectProp", { fg = colors.BROWN })
	HL("htmlTag", { fg = colors.RED })
	HL("htmlEndTag", { fg = colors.RED })
	HL("htmlTagName", { fg = colors.BROWN })
	HL("htmlArg", { fg = colors.ORANGE })
	HL("htmlScriptTag", { fg = colors.PURPLE })
	HL("htmlSpecialTagName", { fg = colors.PINK })
	HL("htmlLink", { fg = colors.GREEN, underline = true })
	HL("htmlBold", { fg = colors.YELLOW, bold = true })
	HL("htmlItalic", { fg = colors.PINK, italic = true })
	HL("Search", { fg = colors.BG, bg = colors.YELLOW })
	HL("IncSearch", { fg = colors.BG, bg = colors.YELLOW })
	HL("DiagnosticError", { fg = colors.RED })
	HL("DiagnosticWarn", { fg = colors.YELLOW })
	HL("DiagnosticInfo", { fg = colors.BLUE })
	HL("DiagnosticHint", { fg = colors.ORANGE })
	HL("Directory", { fg = colors.BLUE })
	HL("NotifyERRORBorder", { fg = colors.RED })
	HL("NotifyERRORTitle", { fg = colors.RED })
	HL("NotifyERRORBody", { fg = colors.RED })
	HL("NotifyERRORIcon", { fg = colors.RED })
	HL("NotifyWARNBorder", { fg = colors.YELLOW })
	HL("NotifyWARNTitle", { fg = colors.YELLOW })
	HL("NotifyWARNBody", { fg = colors.YELLOW })
	HL("NotifyWARNIcon", { fg = colors.YELLOW })
	HL("NotifyINFOBorder", { fg = colors.BLUE })
	HL("NotifyINFOTitle", { fg = colors.BLUE })
	HL("NotifyINFOBody", { fg = colors.BLUE })
	HL("NotifyINFOIcon", { fg = colors.BLUE })
	HL("jsonKeyword", { fg = colors.PINK })
	HL("jsonString", { fg = colors.GREEN })
	HL("jsonNumber", { fg = colors.BROWN })
	HL("jsonBoolean", { fg = colors.BLUE })
	HL("jsonNull", { fg = colors.PURPLE })
	HL("jsonBraces", { fg = colors.ORANGE })
	HL("jsonBrackets", { fg = colors.ORANGE })
	HL("jsonQuote", { fg = colors.GRAY })
	HL("bashFunction", { fg = colors.PURPLE })
	HL("bashVariable", { fg = colors.RED })
	HL("bashStatement", { fg = colors.BLUE })
	HL("bashConditional", { fg = colors.GREEN })
	HL("bashLoop", { fg = colors.ORANGE })
	HL("bashCommand", { fg = colors.YELLOW })
	HL("bashKeyword", { fg = colors.PINK })
	HL("bashOperator", { fg = colors.ORANGE })
	HL("bashString", { fg = colors.GREEN })
	HL("bashNumber", { fg = colors.BROWN })
	HL("bashComment", { fg = colors.GRAY, italic = true })
	HL("bashHereDoc", { fg = colors.PURPLE })
	HL("bashHereString", { fg = colors.PURPLE })
	HL("bashRedirection", { fg = colors.ORANGE })
	HL("bashSubshell", { fg = colors.BLUE })
	HL("bashTest", { fg = colors.GREEN })
	HL("bashBuiltin", { fg = colors.PINK })
	HL("bashSpecial", { fg = colors.ORANGE })
	HL("@markup.heading.1.markdown", { fg = colors.RED, bold = true })
	HL("@markup.heading.2.markdown", { fg = colors.ORANGE, bold = true })
	HL("@markup.heading.3.markdown", { fg = colors.YELLOW, bold = true })
	HL("@markup.heading.4.markdown", { fg = colors.GREEN, bold = true })
	HL("@markup.heading.5.markdown", { fg = colors.BLUE, bold = true })
	HL("@markup.heading.6.markdown", { fg = colors.PURPLE, bold = true })
	HL("@markup", { fg = colors.PURPLE })
	HL("@markup.heading", { fg = colors.BROWN })
	HL("@markup.row", { fg = colors.BROWN })
	HL("DiffChange", { fg = colors.ORANGE, bold = true })
	HL("DiffAdd", { fg = colors.GREEN, bold = true })
	HL("DiffDelete", { fg = colors.RED, bold = true })
end

return M
